#include <cstdio>
#include <iostream>
#include <math.h>
#define lson l , m , rt << 1
#define rson m + 1 , r , rt << 1 | 1
const int maxn = 200005;
int sum[maxn<<2];
int max(int a,int b)
{
	if(a>b)
		return a;
	return b;
}
void PushUP(int rt) 
{
    sum[rt] = max(sum[rt<<1],sum[rt<<1|1]);
}
void build(int l,int r,int rt) {
    if (l == r) 
	{
        scanf("%d",&sum[rt]);
        return ;
    }
    int m = (l + r) >> 1;
    build(lson);
    build(rson);
    PushUP(rt);
}
void update(int p,int add,int l,int r,int rt) {
    if (l == r) 
	{
        sum[rt] = add;
        return ;
    }
    int m = (l + r) >> 1;
    if (p <= m) 
		update(p , add , lson);
    else 
		update(p , add , rson);
    PushUP(rt);
}
int query(int L,int R,int l,int r,int rt) 
{
    if (L <= l && r <= R) 
	{
        return sum[rt];
    }
    int m = (l + r) >> 1;
    int ret = 0;
    if (L <= m)
		ret =max(ret, query(L , R , lson));
    if (R > m) 
		ret =max(ret, query(L , R , rson));
    return ret;
}
int main() {
    int n,m;        
	while (scanf("%d%d",&n,&m)!=EOF)
	{
        build(1 , n , 1);
        char op[2];
        while (m--) 
		{
            int a , b;
            scanf("%s",op);
            scanf("%d%d",&a,&b);
            if (op[0] == 'Q') 
				printf("%d\n",query(a , b , 1 , n , 1));
            else if
				 (op[0] == 'U') update(a , b , 1 , n , 1);
        }
		}
    return 0;
}