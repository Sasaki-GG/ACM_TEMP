#include<iostream>
#include<cstdio>
#include<vector>
#include<string.h>
using namespace std;
#define M 10005
int n,k,a,b;
//int r[M],c[M];
int match[M],used[M];
/*
struct edge
{
	int to,cap,rev;
};
*/
vector <int> G[M];
void add(int a,int b)
{
	G[a].push_back(b);
	G[b].push_back(a);
}
int dfs(int v)
{
	used[v]=1;
	for (int i=0;i<G[v].size();i++)
	{
		int u=G[v][i];
		int w=match[u];
		if (w<0||!used[w]&&dfs(w))
		{
			match[u]=v;
			match[v]=u;
			return 1;
		}
	}
	return 0;
}
int bi_match()
{
	int ans=0;
	memset(match,-1,sizeof(match));
	for (int v=0;v<n;v++)
	{
		memset(used,0,sizeof(used));
		if (dfs(v))
			ans++;
	}
	return ans;
}
int main()
{
	scanf("%d%d",&n,&k);
	int v=n*2;
	for (int i=0;i<k;i++)
	{
		scanf("%d%d",&a,&b);
		add(a-1,n+b-1);
	}
	printf("%d",bi_match());
	return 0;
}