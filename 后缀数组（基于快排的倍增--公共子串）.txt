#include <cstdio>
#include <iostream>
#include <string.h>
#include <string>
#include <algorithm>
#include <math.h>
#include <queue>
using namespace std;
#define INF (1<<30)
typedef long long LL;
const int maxn = 10005;
const int N = 20005;
int n,m,k,a,b,c,d,l;
string s,t,tt;
int sa[N],lcp[N];
int ran[N],temp[N];
bool cmp(int i,int j)
{
	if (ran[i]!=ran[j])
		return ran[i]<ran[j];
	else
	{
		int l=s.length();
		int ri=i+k<=l?ran[i+k]:-1;
		int rj=j+k<=l?ran[j+k]:-1;
		return ri<rj;
	}
}
void create_sa()
{
	int n=s.length();
	for (int i=0;i<=n;i++)
	{
		sa[i]=i;
		ran[i]=i<n?s[i]:-1;
	}
	for (k=1;k<=n;k*=2)     //Attention: 此处的k为全局的变量，需要进行比较！ 
	{
		sort(sa,sa+n+1,cmp);
		temp[sa[0]]=0;
		for (int i=1;i<=n;i++)
			temp[sa[i]]=temp[sa[i-1]]+(cmp(sa[i-1],sa[i])?1:0);
		for (int i=0;i<=n;i++)
			ran[i]=temp[i];
	}
}
void create_lcp()
{
	int n=s.length();
	for (int i=0;i<=n;i++)
		ran[sa[i]]=i;
	int h=0;
	lcp[0]=0;
	for (int i=0;i<n;i++)
	{
		int j=sa[ran[i]-1];
		if (h>0)
			h--;
		for (;j+h<n&&i+h<n;h++)
			if (s[j+h]!=s[i+h])
				break;
		lcp[ran[i]-1]=h;
	}
}
int main()
{
	ios::sync_with_stdio(false);
	cin>>c;
	getline(cin,tt);
	while (c--)
	{
		memset(sa,0,sizeof(sa));
		memset(lcp,0,sizeof(lcp));
		memset(temp,0,sizeof(temp));
		getline(cin,s);
		getline(cin,t);
		int s1=s.length();
		s+='$'+t;
		create_sa();
		create_lcp();
		int ans=0;
		for (int i=0;i<s.length();i++)
			if ((sa[i]<s1)!=(sa[i+1]<s1))
				ans=max(ans,lcp[i]);
		cout<<"Nejdelsi spolecny retezec ma delku "<<ans<<"."<<endl;
		s.clear();
		t.clear();
	}
	return 0;
}